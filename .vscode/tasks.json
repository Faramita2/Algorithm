{
    "version": "2.0.0",
    "code-runner.executorMap": {
        "cpp": "cd $dir && clang++ $fileName -o $fileNameWithoutExt && ./$fileNameWithoutExt"
    },
    "tasks": [
        {
            "type": "cppbuild",
            "label": "C/C++: clang++ build active file",
            "command": "/usr/bin/clang++",
            "args": [
                "-fcolor-diagnostics",
                "-fansi-escape-codes",
                "-g",
                "${file}",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build",
            "detail": "compiler: /usr/bin/clang++"
        },
        {
            "type": "cppbuild",
            "label": "C/C++: clang build active file",
            "command": "/usr/bin/clang",
            "args": [
                "-fcolor-diagnostics",
                "-fansi-escape-codes",
                "-g",
                "${file}",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger."
        },
        {
            "label": "Generate Problem Files",
            "type": "shell",
            "command": "bash",
            "args": [
                "-c",
                "mkdir -p \"${input:problemName}\" && cat <<EOF > \"${input:problemName}/${input:problemName}.cpp\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    void solve() {\n        // Your code here\n    }\n};\n\nint main() {\n    Solution solution;\n    solution.solve();\n    return 0;\n}\nEOF"
            ],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            }
        }
    ],
    "inputs": [
        {
            "id": "problemName",
            "type": "promptString",
            "description": "Enter the problem name (e.g., '1780. Check if Number is a Sum of Powers of Three'):"
        }
    ],
}